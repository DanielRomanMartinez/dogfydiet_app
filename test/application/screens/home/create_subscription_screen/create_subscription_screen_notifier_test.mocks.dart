// Mocks generated by Mockito 5.4.6 from annotations
// in dogfydiet_app/test/application/screens/home/create_subscription_screen/create_subscription_screen_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:dogfydiet_app/domain/model/objects/subscription_form.dart'
    as _i4;
import 'package:dogfydiet_app/domain/services/subscription_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SubscriptionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriptionService extends _i1.Mock
    implements _i2.SubscriptionService {
  MockSubscriptionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveProgress(_i4.SubscriptionForm? form) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProgress,
          [form],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.SubscriptionForm?> getProgress() => (super.noSuchMethod(
        Invocation.method(
          #getProgress,
          [],
        ),
        returnValue: _i3.Future<_i4.SubscriptionForm?>.value(),
      ) as _i3.Future<_i4.SubscriptionForm?>);

  @override
  _i3.Future<void> clearProgress() => (super.noSuchMethod(
        Invocation.method(
          #clearProgress,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> getCurrentStep() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentStep,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<bool> isFormComplete() => (super.noSuchMethod(
        Invocation.method(
          #isFormComplete,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> submitForm(_i4.SubscriptionForm? form) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitForm,
          [form],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
